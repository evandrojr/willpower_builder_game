var gutil, through, compile;
gutil = require('gulp-util');
through = require('through2');
compile = require('riot').compile;
module.exports = function(opts){
  var transform;
  opts == null && (opts = {});
  transform = function(file, encoding, callback){
    var compiledCode, splitedPath;
    if (file.isNull()) {
      return callback(null, file);
    }
    if (file.isStream()) {
      return callback(new gutil.PluginError('gulp-article', 'Stream not supported'));
    }
    compiledCode = compile(file.contents.toString(), opts);
    if (opts.modular) {
      compiledCode = "(function(tagger) {\n  if (typeof define === 'function' && define.amd) {\n    define(['riot'], function(riot) { tagger(riot); });\n  } else if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    tagger(require('riot'));\n  } else {\n    tagger(window.riot);\n  }\n})(function(riot) {\n" + compiledCode + "\n\n});";
    }
    file.contents = new Buffer(compiledCode);
    splitedPath = file.path.split('.');
    splitedPath[splitedPath.length - 1] = 'js';
    file.path = splitedPath.join('.');
    return callback(null, file);
  };
  return through.obj(transform);
};